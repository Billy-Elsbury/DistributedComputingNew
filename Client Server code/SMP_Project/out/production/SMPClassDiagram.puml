@startuml SMP_Application_Adapted_No_Inline_Comments

package "Presentation Layer" {
  class LoginWindow {
    + handleLogin(username: String, password: String)
    + handleRegister(username: String, password: String)
  }
  class SMPClientUI {
    + upload(message: String, id: String)
    + download(id: String)
    + downloadAll()
    + clear()
    + logoff()
  }
  class SMPServerUI {
    - logArea: JTextArea
    - isInitialised: boolean
    + {static} getInstance(): SMPServerUI
    + log(message: String)
  }
}

package "Application Layer" {
  class ClientHelper {
     + ClientHelper(hostName: String, port: int)
     + login(user: String, pass: String): String
     + upload(user: String, id: int, msg: String): String
     + download(id: String): String
     + clear(): String
     + logoff(user: String): String
     + close()
  }
  class SMPThread {
    + run()
    + handleLogin(username: String, password: String)
    + handleUpload(username: String, id: int, message: String)
    + handleDownload(id: int)
    + handleLogoff(username: String)
  }
  class SMPServer {
    + {static} main(args: String[])
  }
  class MessageStorage {
    + {static} getInstance(): MessageStorage
    + uploadMessage(username: String, id: int, message: String): boolean
    + getMessageById(id: int): String
    + getAllMessages(): List<String>
    + clearMessages()
  }
  class UserManager {
    + addUser(username: String, password: String): boolean
    + verifyUser(username: String, password: String): boolean
  }
}

package "Service Layer" {
  class MyStreamSocket {
    + MyStreamSocket(socket: Socket)
    + sendMessage(message: String)
    + receiveMessage(): String
    + close()
  }
}

' Define Relationships
LoginWindow ---> ClientHelper : uses >
SMPClientUI ---> ClientHelper : uses >
SMPThread --> MyStreamSocket : uses > ' Server-side socket usage
ClientHelper ..> MyStreamSocket : <<creates & uses>> ' Client-side socket usage
SMPThread --> MessageStorage : uses >
SMPThread --> UserManager : uses >
SMPThread --> SMPServerUI : logs > ' Per-thread logging
SMPServer ..> SMPThread : <<creates>>
SMPServer --> SMPServerUI : logs > ' Server startup logging


@enduml